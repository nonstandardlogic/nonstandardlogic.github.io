{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cloud labs and articles This site includes a collection of articles and projects written by the Non Standard logic team, around different aspects of the cloud.","title":"Home"},{"location":"#cloud-labs-and-articles","text":"This site includes a collection of articles and projects written by the Non Standard logic team, around different aspects of the cloud.","title":"Cloud labs and articles"},{"location":"projects/","text":"Projects Below is a set of projects that allow you to explore different advanced aspects of the Kubernetes ecosystem, and the Go (Golang) language. Memcached Operator This project, based on the examples provided by the SDK operator, shows an example of creating a simple Memcached operator (memcached operator) using tools and libraries provided by the SDK Operator. https://github.com/nonstandardlogic/memcached-operator","title":"Projects"},{"location":"projects/#projects","text":"Below is a set of projects that allow you to explore different advanced aspects of the Kubernetes ecosystem, and the Go (Golang) language.","title":"Projects"},{"location":"projects/#memcached-operator","text":"This project, based on the examples provided by the SDK operator, shows an example of creating a simple Memcached operator (memcached operator) using tools and libraries provided by the SDK Operator. https://github.com/nonstandardlogic/memcached-operator","title":"Memcached Operator"},{"location":"articles/k8s-memcached-operator/","text":"Create Project $ mkdir $GOPATH /src/github.com/nonstandardlogic $ mkdir $GOPATH /src/github.com/nonstandardlogic/memcached-operator $ cd $GOPATH /src/github.com/memcached-operator $ operator-sdk init --domain = example.com Error: failed to initialize project with version \"3-alpha\" : error finding current repository: could not determine repository path from module data, package data, or by initializing a module: go: cannot determine module path for source directory /home/serge/go/memcached-operator ( outside GOPATH, module path must be specified ) Example usage: 'go mod init example.com/m' to initialize a v0 or v1 module 'go mod init example.com/m/v2' to initialize a v2 module Then $ go mod init example.com/m/v2 go: creating new go.mod: module example.com/m/v2 Create the project $ operator-sdk init --domain example.com --license apache2 --owner \"NSL Team\" Writing scaffold for you to edit... Get controller runtime: $ go get sigs.k8s.io/controller-runtime@v0.6.2 Update go.mod: $ go mod tidy Running make: $ make /home/serge/go/bin/controller-gen object:headerFile = \"hack/boilerplate.go.txt\" paths = \"./...\" go fmt ./... go vet ./... go build -o bin/manager main.go Next: define a resource with: $ operator-sdk create api Create API $ operator-sdk create api --group cache --version v1 --kind Memcached --resource = true --controller = true Writing scaffold for you to edit... api/v1/memcached_types.go controllers/memcached_controller.go Running make: $ make /home/serge/go/bin/controller-gen object:headerFile = \"hack/boilerplate.go.txt\" paths = \"./...\" go fmt ./... go vet ./... go build -o bin/manager main.go $ make manifests /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases Install Kubebuilder ( https://book.kubebuilder.io/quick-start.html) s$ os= $ ( go env GOOS ) $ arch= $ ( go env GOARCH ) $ curl - L https : // go . kubebuilder . io / dl / 2.3.1 / $ { os } / $ { arch } | tar - xz - C / tmp / % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 68 100 68 0 0 163 0 --:--:-- --:--:-- --:--:-- 163 100 124 100 124 0 0 272 0 --:--:-- --:--:-- --:--:-- 272 100 649 100 649 0 0 719 0 --:--:-- --:--:-- --:--:-- 2021 100 54.8 M 100 54.8 M 0 0 3701 k 0 0 : 00 : 15 0 : 00 : 15 --:--:-- 4395 k $ sudo mv / tmp / kubebuilder_2 .3.1 _ $ { os } _ $ { arch } / usr / local / kubebuilder $ export PATH = $ PATH :/usr / local / kubebuilder / bin API Definition Update the api/v1alpha1/memcached_types.go file: // MemcachedSpec defines the desired state of Memcached type MemcachedSpec struct { // +kubebuilder:validation:Minimum=0 // Size is the size of the memcached deployment Size int32 json:\"size\" } // MemcachedStatus defines the observed state of Memcached type MemcachedStatus struct { // Nodes are the names of the memcached pods Nodes []string `json:\"nodes\"` } Generate CRD $ make manifests /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases Update CR update the CR sample in config/samples/cache_v1_memcached.yaml to set the attribute defined: apiVersion : cache . example . com / v1 kind : Memcached metadata : name : memcached - sample spec : # Add fields here size : 1 Building and pushing to Docker registry $ make docker-build docker-push IMG = nonstandardlogic/memcached-operator /home/serge/go/bin/controller-gen object:headerFile = \"hack/boilerplate.go.txt\" paths = \"./...\" go fmt ./... go vet ./... /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases go test ./... -coverprofile cover.out ? github.com/nonstandardlogic/memcached-operator [ no test files ] ? github.com/nonstandardlogic/memcached-operator/api/v1 [ no test files ] ok github.com/nonstandardlogic/memcached-operator/controllers 5 .131s coverage: 0 .0% of statements docker build . -t nonstandardlogic/memcached-operator Sending build context to Docker daemon 44 .48MB Step 1 /14 : FROM golang:1.13 as builder ---> d6f3656320fe Step 2 /14 : WORKDIR /workspace ... 1d44b27e08d8: Pushed 84ff92691f90: Pushed d72a74c56330: Pushed latest: digest: sha256:b7074c024bfa691255788566b768a3f3cb0b4bc8e2e0062cb8d6dbd0c617749a size: 945 Deploy CRDS $ make install /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases /home/serge/go/bin/kustomize build config/crd | kubectl apply -f - customresourcedefinition.apiextensions.k8s.io/memcacheds.cache.example.com created Check the operator $ kubectl api-resources | grep memcached memcacheds cache.example.com true Memcached Check CRDS $ kubectl describe crds memcacheds Running the Operator $ make deploy IMG = nonstandardlogic/memcached-operator /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases cd config/manager && /home/serge/go/bin/kustomize edit set image controller = nonstandardlogic/memcached-operator /home/serge/go/bin/kustomize build config/default | kubectl apply -f - namespace/memcached-operator-system created customresourcedefinition.apiextensions.k8s.io/memcacheds.cache.example.com configured role.rbac.authorization.k8s.io/memcached-operator-leader-election-role created clusterrole.rbac.authorization.k8s.io/memcached-operator-manager-role created clusterrole.rbac.authorization.k8s.io/memcached-operator-proxy-role created clusterrole.rbac.authorization.k8s.io/memcached-operator-metrics-reader created rolebinding.rbac.authorization.k8s.io/memcached-operator-leader-election-rolebinding created clusterrolebinding.rbac.authorization.k8s.io/memcached-operator-manager-rolebinding created clusterrolebinding.rbac.authorization.k8s.io/memcached-operator-proxy-rolebinding created service/memcached-operator-controller-manager-metrics-service created deployment.apps/memcached-operator-controller-manager created Check Operator namespace $ kubectl get pods -n memcached-operator-system NAME READY STATUS RESTARTS AGE memcached-operator-controller-manager-686dcfc75d-dvtnm 2 /2 Running 0 95s Check Operator logs $ kubectl logs deployment.apps/memcached-operator-controller-manager -n memcached-operator-system -c manager Apply example CR $ kubectl apply -f config/samples/cache_v1_memcached.yaml -n memcached-operator-system memcached.cache.example.com/memcached-sample created Check resources $ kubectl get all -n memcached-operator-system NAME READY STATUS RESTARTS AGE pod/memcached-operator-controller-manager-686dcfc75d-dvtnm 2 /2 Running 0 4m1s pod/memcached-sample-9b765dfc8-2pwsm 1 /1 Running 0 93s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE service/memcached-operator-controller-manager-metrics-service ClusterIP 10 .109.157.125 <none> 8443 /TCP 4m1s NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/memcached-operator-controller-manager 1 /1 1 1 4m1s deployment.apps/memcached-sample 1 /1 1 1 93s NAME DESIRED CURRENT READY AGE replicaset.apps/memcached-operator-controller-manager-686dcfc75d 1 1 1 4m1s replicaset.apps/memcached-sample-9b765dfc8 1 1 1 93s Cleanup resources Now, you can cleanup all by running to delete the CR: $ kubectl delete -f config/samples/cache_v1_memcached.yaml Cleanup resources Uninstall all operator\u2019s resources and its CRDs: $ kustomize build config/default | kubectl delete -f -","title":"Memcache Kubernetes Operator"},{"location":"articles/k8s-memcached-operator/#create-project","text":"$ mkdir $GOPATH /src/github.com/nonstandardlogic $ mkdir $GOPATH /src/github.com/nonstandardlogic/memcached-operator $ cd $GOPATH /src/github.com/memcached-operator $ operator-sdk init --domain = example.com Error: failed to initialize project with version \"3-alpha\" : error finding current repository: could not determine repository path from module data, package data, or by initializing a module: go: cannot determine module path for source directory /home/serge/go/memcached-operator ( outside GOPATH, module path must be specified ) Example usage: 'go mod init example.com/m' to initialize a v0 or v1 module 'go mod init example.com/m/v2' to initialize a v2 module Then $ go mod init example.com/m/v2 go: creating new go.mod: module example.com/m/v2 Create the project $ operator-sdk init --domain example.com --license apache2 --owner \"NSL Team\" Writing scaffold for you to edit... Get controller runtime: $ go get sigs.k8s.io/controller-runtime@v0.6.2 Update go.mod: $ go mod tidy Running make: $ make /home/serge/go/bin/controller-gen object:headerFile = \"hack/boilerplate.go.txt\" paths = \"./...\" go fmt ./... go vet ./... go build -o bin/manager main.go Next: define a resource with: $ operator-sdk create api","title":"Create Project"},{"location":"articles/k8s-memcached-operator/#create-api","text":"$ operator-sdk create api --group cache --version v1 --kind Memcached --resource = true --controller = true Writing scaffold for you to edit... api/v1/memcached_types.go controllers/memcached_controller.go Running make: $ make /home/serge/go/bin/controller-gen object:headerFile = \"hack/boilerplate.go.txt\" paths = \"./...\" go fmt ./... go vet ./... go build -o bin/manager main.go $ make manifests /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases","title":"Create API"},{"location":"articles/k8s-memcached-operator/#install-kubebuilder","text":"( https://book.kubebuilder.io/quick-start.html) s$ os= $ ( go env GOOS ) $ arch= $ ( go env GOARCH ) $ curl - L https : // go . kubebuilder . io / dl / 2.3.1 / $ { os } / $ { arch } | tar - xz - C / tmp / % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 68 100 68 0 0 163 0 --:--:-- --:--:-- --:--:-- 163 100 124 100 124 0 0 272 0 --:--:-- --:--:-- --:--:-- 272 100 649 100 649 0 0 719 0 --:--:-- --:--:-- --:--:-- 2021 100 54.8 M 100 54.8 M 0 0 3701 k 0 0 : 00 : 15 0 : 00 : 15 --:--:-- 4395 k $ sudo mv / tmp / kubebuilder_2 .3.1 _ $ { os } _ $ { arch } / usr / local / kubebuilder $ export PATH = $ PATH :/usr / local / kubebuilder / bin","title":"Install Kubebuilder"},{"location":"articles/k8s-memcached-operator/#api-definition","text":"Update the api/v1alpha1/memcached_types.go file: // MemcachedSpec defines the desired state of Memcached type MemcachedSpec struct { // +kubebuilder:validation:Minimum=0 // Size is the size of the memcached deployment Size int32 json:\"size\" } // MemcachedStatus defines the observed state of Memcached type MemcachedStatus struct { // Nodes are the names of the memcached pods Nodes []string `json:\"nodes\"` }","title":"API Definition"},{"location":"articles/k8s-memcached-operator/#generate-crd","text":"$ make manifests /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases","title":"Generate CRD"},{"location":"articles/k8s-memcached-operator/#update-cr","text":"update the CR sample in config/samples/cache_v1_memcached.yaml to set the attribute defined: apiVersion : cache . example . com / v1 kind : Memcached metadata : name : memcached - sample spec : # Add fields here size : 1","title":"Update CR"},{"location":"articles/k8s-memcached-operator/#building-and-pushing-to-docker-registry","text":"$ make docker-build docker-push IMG = nonstandardlogic/memcached-operator /home/serge/go/bin/controller-gen object:headerFile = \"hack/boilerplate.go.txt\" paths = \"./...\" go fmt ./... go vet ./... /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases go test ./... -coverprofile cover.out ? github.com/nonstandardlogic/memcached-operator [ no test files ] ? github.com/nonstandardlogic/memcached-operator/api/v1 [ no test files ] ok github.com/nonstandardlogic/memcached-operator/controllers 5 .131s coverage: 0 .0% of statements docker build . -t nonstandardlogic/memcached-operator Sending build context to Docker daemon 44 .48MB Step 1 /14 : FROM golang:1.13 as builder ---> d6f3656320fe Step 2 /14 : WORKDIR /workspace ... 1d44b27e08d8: Pushed 84ff92691f90: Pushed d72a74c56330: Pushed latest: digest: sha256:b7074c024bfa691255788566b768a3f3cb0b4bc8e2e0062cb8d6dbd0c617749a size: 945","title":"Building and pushing to Docker registry"},{"location":"articles/k8s-memcached-operator/#deploy-crds","text":"$ make install /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases /home/serge/go/bin/kustomize build config/crd | kubectl apply -f - customresourcedefinition.apiextensions.k8s.io/memcacheds.cache.example.com created","title":"Deploy CRDS"},{"location":"articles/k8s-memcached-operator/#check-the-operator","text":"$ kubectl api-resources | grep memcached memcacheds cache.example.com true Memcached","title":"Check the operator"},{"location":"articles/k8s-memcached-operator/#check-crds","text":"$ kubectl describe crds memcacheds","title":"Check CRDS"},{"location":"articles/k8s-memcached-operator/#running-the-operator","text":"$ make deploy IMG = nonstandardlogic/memcached-operator /home/serge/go/bin/controller-gen \"crd:trivialVersions=true\" rbac:roleName = manager-role webhook paths = \"./...\" output:crd:artifacts:config = config/crd/bases cd config/manager && /home/serge/go/bin/kustomize edit set image controller = nonstandardlogic/memcached-operator /home/serge/go/bin/kustomize build config/default | kubectl apply -f - namespace/memcached-operator-system created customresourcedefinition.apiextensions.k8s.io/memcacheds.cache.example.com configured role.rbac.authorization.k8s.io/memcached-operator-leader-election-role created clusterrole.rbac.authorization.k8s.io/memcached-operator-manager-role created clusterrole.rbac.authorization.k8s.io/memcached-operator-proxy-role created clusterrole.rbac.authorization.k8s.io/memcached-operator-metrics-reader created rolebinding.rbac.authorization.k8s.io/memcached-operator-leader-election-rolebinding created clusterrolebinding.rbac.authorization.k8s.io/memcached-operator-manager-rolebinding created clusterrolebinding.rbac.authorization.k8s.io/memcached-operator-proxy-rolebinding created service/memcached-operator-controller-manager-metrics-service created deployment.apps/memcached-operator-controller-manager created","title":"Running the Operator"},{"location":"articles/k8s-memcached-operator/#check-operator-namespace","text":"$ kubectl get pods -n memcached-operator-system NAME READY STATUS RESTARTS AGE memcached-operator-controller-manager-686dcfc75d-dvtnm 2 /2 Running 0 95s","title":"Check Operator namespace"},{"location":"articles/k8s-memcached-operator/#check-operator-logs","text":"$ kubectl logs deployment.apps/memcached-operator-controller-manager -n memcached-operator-system -c manager","title":"Check Operator logs"},{"location":"articles/k8s-memcached-operator/#apply-example-cr","text":"$ kubectl apply -f config/samples/cache_v1_memcached.yaml -n memcached-operator-system memcached.cache.example.com/memcached-sample created","title":"Apply example CR"},{"location":"articles/k8s-memcached-operator/#check-resources","text":"$ kubectl get all -n memcached-operator-system NAME READY STATUS RESTARTS AGE pod/memcached-operator-controller-manager-686dcfc75d-dvtnm 2 /2 Running 0 4m1s pod/memcached-sample-9b765dfc8-2pwsm 1 /1 Running 0 93s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE service/memcached-operator-controller-manager-metrics-service ClusterIP 10 .109.157.125 <none> 8443 /TCP 4m1s NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/memcached-operator-controller-manager 1 /1 1 1 4m1s deployment.apps/memcached-sample 1 /1 1 1 93s NAME DESIRED CURRENT READY AGE replicaset.apps/memcached-operator-controller-manager-686dcfc75d 1 1 1 4m1s replicaset.apps/memcached-sample-9b765dfc8 1 1 1 93s","title":"Check resources"},{"location":"articles/k8s-memcached-operator/#cleanup-resources","text":"Now, you can cleanup all by running to delete the CR: $ kubectl delete -f config/samples/cache_v1_memcached.yaml","title":"Cleanup resources"},{"location":"articles/k8s-memcached-operator/#cleanup-resources_1","text":"Uninstall all operator\u2019s resources and its CRDs: $ kustomize build config/default | kubectl delete -f -","title":"Cleanup resources"}]}